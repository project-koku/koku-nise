name: Unit Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-20.04
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0

      - name: Install Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: '3.8'

      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0


  ci:
    name: ${{ matrix.test.name }} - ${{ matrix.test.py_version }}
    runs-on: ubuntu-20.04
    env:
      TOX_ENV: ${{ matrix.test.tox_env }}

    strategy:
      fail-fast: false
      matrix:
        test:
          - name: Unit
            py_version: "3.8"
            tox_env: unit

          - name: Unit
            py_version: "3.9"
            tox_env: unit

          - name: Unit
            py_version: "3.10"
            tox_env: unit

          - name: Unit
            py_version: "3.11"
            tox_env: unit

          - name: Sanity
            py_version: "3.8"
            tox_env: sanity

          - name: Sanity
            py_version: "3.9"
            tox_env: sanity

          - name: Sanity
            py_version: "3.10"
            tox_env: sanity

          - name: Sanity
            py_version: "3.11"
            tox_env: sanity

    steps:
      - name: Checkout repsository
        uses: actions/checkout@v3.2.0
        with:
          fetch-depth: 0

      - name: Display build environment
        run: printenv

      - name: Install Python ${{ matrix.test.py_version }}
        uses: actions/setup-python@v4.4.0
        with:
          python-version: ${{ matrix.test.py_version }}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox -c tests/requirements.txt

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.2.2
        with:
          path: |
            ~/.cache/pip
            .tox/
          key: ${{ runner.os }}-env-${{ matrix.test.py_version }}-${{ hashFiles('setup.cfg') }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          tox run --notest

      - name: Run tests
        run: tox run

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        if: contains(env.TOX_ENV, 'unit')
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: Python-${{ matrix.test.py_version}}
          fail_ci_if_error: true
