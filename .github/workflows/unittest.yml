name: Unit Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Unit - ${{ matrix.py_version.name }}
    runs-on: ubuntu-20.04
    env:
      TOXENV: ${{ matrix.py_version.tox_env }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        py_version:
          - name: "3.8"
            tox_env: unit-py38

    steps:
      - name: Checkout repsository
        uses: actions/checkout@v3.2.0
        with:
          fetch-depth: 0

      - name: Display build environment
        run: printenv

      - name: Set up Python ${{ matrix.py_version.name }}
        uses: actions/setup-python@v4.4.0
        with:
          python-version: ${{ matrix.py_version.name }}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox -c tests/requirements.txt

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3.2.2
        with:
          path: |
            ~/.cache/pipenv
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-env-${{ matrix.py_version.name }}-${{ hashFiles('**/Pipfile.lock') }}-${{ secrets.ACTIONS_CACHE_KEY_UUID }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          tox --notest

      - name: Run sanity tests
        run: tox -e sanity

      - name: Run unit tests
        run: tox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: Python-${{ matrix.py_version.name}}
          fail_ci_if_error: true
